[{"E:\\Project Practice\\React Projects\\react-demo\\src\\index.js":"1","E:\\Project Practice\\React Projects\\react-demo\\src\\App.js":"2","E:\\Project Practice\\React Projects\\react-demo\\src\\reportWebVitals.js":"3","E:\\Project Practice\\React Projects\\react-demo\\src\\signup.js":"4","E:\\Project Practice\\React Projects\\react-demo\\src\\login.js":"5","E:\\Project Practice\\React Projects\\react-demo\\src\\ToDoList.js":"6","E:\\Project Practice\\React Projects\\react-demo\\src\\remember_me.js":"7","E:\\Project Practice\\React Projects\\react-demo\\src\\HooksList.js":"8","E:\\Project Practice\\React Projects\\react-demo\\src\\hooksTimer.js":"9"},{"size":656,"mtime":1609565925712,"results":"10","hashOfConfig":"11"},{"size":2675,"mtime":1611832780076,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3238,"mtime":1609587138323,"results":"14","hashOfConfig":"11"},{"size":4187,"mtime":1609584903607,"results":"15","hashOfConfig":"11"},{"size":1081,"mtime":1611826428595,"results":"16","hashOfConfig":"11"},{"size":3186,"mtime":1609585953391,"results":"17","hashOfConfig":"11"},{"size":1885,"mtime":1611832016064,"results":"18","hashOfConfig":"11"},{"size":1330,"mtime":1611834188301,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"10miqej",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Project Practice\\React Projects\\react-demo\\src\\index.js",[],["42","43"],"E:\\Project Practice\\React Projects\\react-demo\\src\\App.js",[],"E:\\Project Practice\\React Projects\\react-demo\\src\\reportWebVitals.js",[],"E:\\Project Practice\\React Projects\\react-demo\\src\\signup.js",["44","45","46","47"],"import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nexport default class SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fNameValue: \"\",\r\n      lNameValue: \"\",\r\n      emailValue: \"\",\r\n      passwordValue: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    debugger;\r\n    localStorage.setItem(\"document\", JSON.stringify(this.state));\r\n    alert(\"You are registered successfully\");\r\n    this.props.history.push(\"/sign-in\");\r\n    // alert(\r\n    //   \"First Name submitted: \" +\r\n    //     this.state.fNameValue +\r\n    //     \" Last Name submitted: \" +\r\n    //     this.state.lNameValue +\r\n    //     \" Email submitted: \" +\r\n    //     this.state.emailValue +\r\n    //     \" Password submitted: \" +\r\n    //     this.state.passwordValue\r\n    // );\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"auth-wrapper\">\r\n          <div className=\"auth-inner\">\r\n            <form>\r\n              <h3>Sign Up</h3>\r\n              <div className=\"form-group\">\r\n                <label>First name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"fNameValue\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"First name\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Last name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lNameValue\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Last name\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"emailValue\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"passwordValue\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                onClick={this.handleSubmit}\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                Sign Up\r\n              </button>\r\n\r\n              <p className=\"forgot-password text-right\">\r\n                Already registered <a href=\"#\">sign in?</a>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","E:\\Project Practice\\React Projects\\react-demo\\src\\login.js",["48","49","50","51","52","53"],"import React, { Component, state } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nexport default class Login extends Component {\r\n  documentData;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { emailValue: \"\", passwordValue: \"\" };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    // this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    //debugger;\r\n\r\n    var storage = JSON.parse(localStorage.getItem(\"document\"));\r\n\r\n    if (storage != null) {\r\n      if (\r\n        storage[\"emailValue\"] == this.state.emailValue &&\r\n        storage[\"passwordValue\"] == this.state.passwordValue\r\n      ) {\r\n        alert(\"You are logged in successfully\");\r\n        this.props.history.push(\"/todo-list\");\r\n      } else {\r\n        alert(\"Username or Password does not match\");\r\n      }\r\n    }\r\n\r\n    if (storage == null)\r\n      localStorage.setItem(\"document\", JSON.stringify(this.state));\r\n\r\n    // alert(\r\n    //   \"Email submitted: \" +\r\n    //     this.state.emailValue +\r\n    //     \" Password submitted: \" +\r\n    //     this.state.passwordValue\r\n    // );\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n    //localStorage.removeItem(\"emailValue\");\r\n    //localStorage.clear();\r\n    this.documentData = JSON.parse(localStorage.getItem(\"document\"));\r\n\r\n    if (localStorage.getItem(\"document\")) {\r\n      this.setState({\r\n        emailValue: this.documentData.emailValue,\r\n        passwordValue: this.documentData.passwordValue,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        emailValue: \"\",\r\n        passwordValue: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n          <Router>\r\n            {/* <form onSubmit={this.handleFormSubmit}> */}\r\n            <form>\r\n              <h3>Sign In</h3>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"emailValue\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"passwordValue\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <div className=\"custom-control custom-checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"customCheck1\"\r\n                    name=\"lsRememberMe\"\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"customCheck1\"\r\n                  >\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button> */}\r\n              <Link to={\"/todo-list\"}>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block\"\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Link>\r\n\r\n              <p className=\"forgot-password text-right\">\r\n                Forgot <a href=\"#\">password?</a>\r\n              </p>\r\n            </form>\r\n\r\n            {/* <Switch>\r\n                        <Route path=\"/todo-list\" component={ToDoList} />\r\n                    </Switch> */}\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\Project Practice\\React Projects\\react-demo\\src\\ToDoList.js",[],"E:\\Project Practice\\React Projects\\react-demo\\src\\remember_me.js",["54","55"],"import React from \"react\";\r\n\r\nclass RememberMe extends React.Component {\r\n  static displayName = \"RememberMe\";\r\n\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isChecked: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.checkbox && localStorage.email !== \"\") {\r\n      this.setState({\r\n        isChecked: true,\r\n        email: localStorage.username,\r\n        password: localStorage.password,\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeValue = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeCheckbox = (event) => {\r\n    this.setState({\r\n      isChecked: event.target.checked,\r\n    });\r\n  };\r\n\r\n  loginSubmit = () => {\r\n    debugger;\r\n    const { email, password, isChecked } = this.state;\r\n    if (isChecked && email !== \"\") {\r\n      localStorage.username = email;\r\n      localStorage.password = password;\r\n      localStorage.checkbox = isChecked;\r\n    } else {\r\n    }\r\n\r\n    if (\r\n      localStorage.username == this.state.email &&\r\n      localStorage.password == this.state.password\r\n    ) {\r\n      alert(\"You are logged in successfully\");\r\n      this.props.history.push(\"/todo-list\");\r\n    } else {\r\n      alert(\"Username or Password does not match\");\r\n    }\r\n    // here call the API to signup/login\r\n  };\r\n\r\n  render() {\r\n    const { email, password, isChecked } = this.state;\r\n    return (\r\n      <div>\r\n        <form className=\"formRememberMe rememberMeSection\">\r\n          <div className=\"rememberLoginSection\">\r\n            <h3>Sign In</h3>\r\n\r\n            <table align=\"center\">\r\n              <tr>\r\n                <td>\r\n                  <label>Email</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChangeValue}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label>Password</label>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={this.onChangeValue}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={isChecked}\r\n                    name=\"lsRememberMe\"\r\n                    onChange={this.onChangeCheckbox}\r\n                  />\r\n                  <label className=\"rememberMeLable\">Remember me</label>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <input\r\n                    type=\"button\"\r\n                    value=\"Login\"\r\n                    onClick={this.loginSubmit}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RememberMe;\r\n","E:\\Project Practice\\React Projects\\react-demo\\src\\HooksList.js",[],"E:\\Project Practice\\React Projects\\react-demo\\src\\hooksTimer.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":35,"nodeType":"62","messageId":"63","endLine":2,"endColumn":41},{"ruleId":"60","severity":1,"message":"64","line":2,"column":43,"nodeType":"62","messageId":"63","endLine":2,"endColumn":48},{"ruleId":"60","severity":1,"message":"65","line":2,"column":50,"nodeType":"62","messageId":"63","endLine":2,"endColumn":54},{"ruleId":"66","severity":1,"message":"67","line":104,"column":36,"nodeType":"68","endLine":104,"endColumn":48},{"ruleId":"60","severity":1,"message":"69","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":2,"column":35,"nodeType":"62","messageId":"63","endLine":2,"endColumn":41},{"ruleId":"60","severity":1,"message":"64","line":2,"column":43,"nodeType":"62","messageId":"63","endLine":2,"endColumn":48},{"ruleId":"70","severity":1,"message":"71","line":30,"column":31,"nodeType":"72","messageId":"73","endLine":30,"endColumn":33},{"ruleId":"70","severity":1,"message":"71","line":31,"column":34,"nodeType":"72","messageId":"73","endLine":31,"endColumn":36},{"ruleId":"66","severity":1,"message":"67","line":130,"column":24,"nodeType":"68","endLine":130,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":45,"column":29,"nodeType":"72","messageId":"73","endLine":45,"endColumn":31},{"ruleId":"70","severity":1,"message":"71","line":46,"column":29,"nodeType":"72","messageId":"73","endLine":46,"endColumn":31},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'state' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]